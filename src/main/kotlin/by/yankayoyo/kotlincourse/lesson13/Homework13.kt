package by.yankayoyo.kotlincourse.lesson13

fun main() {


//1. Предварительные задачи на использование методов.
//Подбери подходящий для задачи метод


    val numbersList = listOf(1, 2, 3, -5, -100, 200, 500, 425, 1, 11, 12)
    val strings = listOf("one", "two", "three", "four")

    // Проверить, что размер коллекции больше 5 элементов.
    println(numbersList.getOrElse(5) { "В списке меньше пяти или 5 элементов" })

// Проверить, что коллекция пустая
    println(numbersList.isEmpty())

//Проверить, что коллекция не пустая
    println(numbersList.isNotEmpty())

//Взять элемент по индексу или создать значение если индекса не существует
    println(numbersList.getOrElse(10) { 100001 })

//Собрать коллекцию в строку
    println(numbersList.joinToString(separator = ", "))

//Посчитать сумму всех значений
    println(numbersList.sum())

//Посчитать среднее
    println(numbersList.average())

//Взять максимальное число
    println(numbersList.maxOrNull())

// Взять минимальное число
    println(numbersList.minOrNull())

//Взять первое число или null
    println(numbersList.firstOrNull { it == numbersList[0] })
    println(numbersList.getOrElse(0) { null })

//Проверить что коллекция содержит элемент
    println(numbersList.contains(425))

        //Задачи на обработку коллекций
        //sorted //groupBy //distinct //take //takeLast //filter //filterNot //map //associate //sortedDescending //forEach //filterNotNull

// Отфильтровать коллекцию по диапазону 18-30
    println(numbersList.filter { it in 18..30 })

// Выбрать числа, которые не делятся на 2 и 3 одновременно
    println(numbersList.filter { it % 3 == 0 && it % 2 == 0 })

// Очистить текстовую коллекцию от null элементов
    val numbersListNull = listOf(1, 3, -8, 0, 33, 100500, 69, null, 42, -1000, 18, 30, null, 25, 21)
    println(numbersListNull.filterNotNull())


// Преобразовать текстовую коллекцию в коллекцию длин слов
    println(strings.map { it.length.toInt() })

// Преобразовать текстовую коллекцию в мапу, где ключи - слова, а значения - перевёрнутые слова
    println(strings.associate { it to it.reversed() })

// Отсортировать список в алфавитном порядке
    println(strings.sorted())


// Отсортировать список по убыванию
    println(strings.sortedDescending())

// Распечатать квадраты элементов списка
    println(numbersList.map { it * it })

// Группировать список по первой букве слов
    println(strings.groupBy { it.first() })

// Очистить список от дублей
    println(numbersList.distinct())

// Взять первые 3 элемента списка
    println(numbersList.take(3))

// Взять последние 3 элемента списка
    println(numbersList.takeLast(3))

//


//Задание 3: Анализ Учебных Оценок
//Начальные значения: val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
//Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3.

    val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
    println(
        grades.filter { it >= 60 }
            .sorted()
            .take(3)
    )

//Задание 4: Создание каталога по первой букве.
//Начальные значения: val list = listOf(
//    "Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик", "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра", "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка", "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка"
//)
//Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве.

    val list = listOf(
        "Стол", "табурет", "ваза", "Кружка",
        "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка",
        "Картина", "столик", "Вазон", "шторы", "Пуф", "книга",
        "Фоторамка", "светильник", "Коврик", "вешалка", "Подставка",
        "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло",
        "занавеска", "Бра", "пепельница", "Глобус", "статуэтка",
        "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка",
        "Настенные часы", "подсвечник", "Журнальный столик", "сувенир",
        "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка"
    )
    println(list.map { it.lowercase() }
        .groupBy { it[0] }
    )

//Задание 5: Подсчёт средней длины слов в списке.
//Начальные значения из задачи 3.
//Цель: Перевести все слова в количество букв, подсчитать среднее значение. Вывести форматированный текст с двумя знаками после запятой.

    val length = println(
        "средней длины: %.2f".format(list.map { it.length }.average()))

//Задание 6: Категоризация чисел.
//Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
//Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).

    val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
    println(((numbers.distinct()).sortedDescending()).groupBy { if (it % 2 == 0) "четные" else "нечетные" })

//Задание 7: Поиск первого подходящего элемента
//Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60)
//Цель: Найти первый возраст в списке, который соответствует условию (больше 18), преобразовать его к строке, или вернуть сообщение "Подходящий возраст не найден".

    val ages = listOf(22, 18, 30, 45, 17, null, 60)
    println(ages.filterNotNull().firstOrNull{ it > 18 }?.toString() ?: "Подходящий возраст не найден")
}

//Задание 2: Характеристика числовой коллекции
//Написать метод, который принимает коллекцию чисел и возвращает строку с текущим состоянием коллекции используя конструкцию when
//Если коллекция пустая - “Пусто”
//Если количество элементов меньше пяти - “Короткая”
//Если коллекция начинается с 0 - “Стартовая”
//Если сумма всех чисел больше 10000 - “Массивная”
//Если среднее значение равно 10 - “Сбалансированная”
//Если длина строки образованная склеиванием коллекции в строку равна 20 - “Клейкая”
//Если максимальное число меньше -10 - “Отрицательная”
//Если минимальное число больше 1000 - “Положительная”
//Если содержит одновременно числа 3 и 14 - “Пи***тая”
//Иначе - “Уникальная”
//

fun numbCollection (numList: List<Int>): String {
    return when {
        numList.isEmpty() -> "Пусто"
        numList.size < 5 -> "Короткая"
        numList.getOrNull(0) == 0 -> "Стартовая"
        numList.sum() > 18080 -> "Массивная"
        numList.min() > 1080 -> "Положительная"
        numList.average() == 10.0 -> "Сбалансированная"
        numList.joinToString("").length == 28 -> "Клейкая"
        numList.max() <= -10 -> "Отрицательная"
        numList.contains(3) && numList.contains(14) -> "Пиздатая"
        else -> "Уникальная"

    }

}
